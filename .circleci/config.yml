# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2

defaults: &defaults
  docker:
    # https://circleci.com/docs/2.0/circleci-images/
    - image: circleci/python:3.7.2-stretch

  working_directory: ~/repo

jobs:
  shellcheck:
    docker:
      - image: koalaman/shellcheck-alpine:stable
    steps:
      - checkout
      - run:
          name: Check Scripts
          command: shellcheck --external-sources script/*

  test:
    <<: *defaults

    steps:
      - checkout

      # Note that race conditions between workflows are possible here:
      # https://circleci.com/docs/2.0/caching/#writing-to-the-cache-in-workflows
      #
      # As long as the caching is deterministic, this _should_ be OK.
      - restore_cache: &default_restore_cache
          keys:
            # When requirements change, use increasingly general patterns to restore cache.
            - v2-dependencies-{{ checksum "requirements.txt" }}
            - v2-dependencies-

      - run: &bootstrap
          name: install dependencies
          command: script/bootstrap

      - save_cache: &default_save_cache
          paths:
            - ./venv
          key: v2-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run tests
          command: script/test

  test installing:
    <<: *defaults

    steps:
      - checkout
      
      - run:
          command: script/test_install
  
  contribution guidelines:
    <<: *defaults

    steps:
      - checkout

      - restore_cache: *default_restore_cache
      - run: *bootstrap
      - save_cache: *default_save_cache

      - run:
          name: typecheck
          command: script/typecheck
      
      - run:
          name: check formatting
          when: always
          command: script/reformat --diff

workflows:
  version: 2
  workflow:
    jobs:
      - shellcheck
      - test
      - test installing
      - contribution guidelines
